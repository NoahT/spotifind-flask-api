---
apiVersion: v1
kind: Namespace
metadata:
  name: spotifind
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spotifind-deployment
  namespace: spotifind
  labels:
    app: spotifind-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spotifind-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: spotifind-app
    spec:
      containers:
      - name: spotifind-app
        image: gcr.io/spotifind-api/spotifind:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: PROJECT_ID
          value: "841506577075"
        - name: PROJECT_NAME
          value: "spotifind-api"
        - name: CLIENT_ID
          value: "081f994d972f46519c1c8f9f6f11102a"
        - name: SECRET_ID
          value: "spotify-rest-api-secret"
        - name: SECRET_VERSION_ID
          value: "latest"
        - name: ENVIRONMENT
          value: "staging"
      # Sidecar container for warmups. We take this example directly from the expedia group documentation
      # https://opensource.expediagroup.com/mittens/docs/installation/running#run-as-a-sidecar-on-kubernetes
      - name: mittens
        image: expediagroup/mittens:latest
        resources:
          limits:
            memory: 50Mi
            cpu: 50m
          requests:
            memory: 50Mi
            cpu: 50m
        readinessProbe:
          exec:
            command:
            - "cat"
            - "ready"
          initialDelaySeconds: 10
          periodSeconds: 30
        livenessProbe:
          exec:
            command:
            - "cat"
            - "alive"
          initialDelaySeconds: 10
          periodSeconds: 30
        args:
        - "--concurrency=1"
        - "--exit-after-warmup=true"
        - "--max-duration-seconds=60"
        - "--target-http-port=5000"
        - "--http-requests=get:/health"
        - "--http-requests=get:/v1/reco/3qZlWVmqyr9BkZ6y4tdtsD?size=10"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: spotifind-autoscaler
  namespace: spotifind
  labels:
    app: spotifind-deployment-autoscaler
spec:
  scaleTargetRef:
    kind: Deployment
    name: spotifind-deployment
    apiVersion: apps/v1
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: spotifind-service
  namespace: spotifind
spec:
  selector:
    app: spotifind-app
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-load-balancer
  namespace: spotifind
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: spotifind-service
            port:
              number: 8080